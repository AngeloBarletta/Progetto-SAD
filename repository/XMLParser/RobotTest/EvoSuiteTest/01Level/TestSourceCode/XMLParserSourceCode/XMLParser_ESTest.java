/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 12 02:30:26 GMT 2023
 */

package XMLParserSourceCode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import XMLParserSourceCode.XMLParser;
import java.util.Hashtable;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLParser_ESTest extends XMLParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XMLParser xMLParser0 = new XMLParser("");
      xMLParser0.store();
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?><data/>", xMLParser0.getXML());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XMLParser xMLParser0 = new XMLParser("");
      Hashtable<Object, Object> hashtable0 = new Hashtable<Object, Object>();
      // Undeclared exception!
      try { 
        xMLParser0.setProperty((String) null, "Crwh;p;9E|Yzv%yP", hashtable0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = XMLParser.returnSpecial("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XMLParser xMLParser0 = new XMLParser((String) null);
      String string0 = xMLParser0.getXML();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XMLParser xMLParser0 = new XMLParser((String) null);
      String string0 = xMLParser0.getSingleProperty((String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XMLParser xMLParser0 = new XMLParser("");
      Vector vector0 = xMLParser0.getProperty("data");
      assertTrue(vector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      XMLParser xMLParser0 = new XMLParser("");
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      // Undeclared exception!
      try { 
        xMLParser0.addProperty("", "4HSil^", hashtable0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }
}
