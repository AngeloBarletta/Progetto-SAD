/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 10:41:36 GMT 2023
 */

package ByteArrayHashMapSourceCode;

import org.junit.Test;
import static org.junit.Assert.*;
import ByteArrayHashMapSourceCode.ByteArrayHashMap;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ByteArrayHashMap_ESTest extends ByteArrayHashMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteArrayHashMap<String> byteArrayHashMap0 = new ByteArrayHashMap<String>();
      List<String> list0 = byteArrayHashMap0.values();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteArrayHashMap<Integer> byteArrayHashMap0 = new ByteArrayHashMap<Integer>(0);
      byte[] byteArray0 = new byte[0];
      byteArrayHashMap0.put(byteArray0, (Integer) null);
      byteArrayHashMap0.values();
      assertFalse(byteArrayHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteArrayHashMap<Object> byteArrayHashMap0 = new ByteArrayHashMap<Object>(1, 2262.7195F);
      int int0 = byteArrayHashMap0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteArrayHashMap<String> byteArrayHashMap0 = new ByteArrayHashMap<String>();
      byte[] byteArray0 = new byte[6];
      byteArrayHashMap0.put(byteArray0, "\"QN3)#m x_");
      int int0 = byteArrayHashMap0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteArrayHashMap<Object> byteArrayHashMap0 = new ByteArrayHashMap<Object>(31, 31);
      ByteArrayHashMap<Object> byteArrayHashMap1 = byteArrayHashMap0.duplicate();
      byteArrayHashMap1.size = (int) (byte) (-50);
      int int0 = byteArrayHashMap1.size();
      assertEquals((-50), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayHashMap<String> byteArrayHashMap0 = new ByteArrayHashMap<String>();
      ByteArrayHashMap.Entry<String> byteArrayHashMap_Entry0 = byteArrayHashMap0.removeEntryForKey(byteArray0);
      assertNull(byteArrayHashMap_Entry0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteArrayHashMap<String> byteArrayHashMap0 = new ByteArrayHashMap<String>();
      byte[] byteArray0 = new byte[6];
      byteArrayHashMap0.put(byteArray0, "\"QN3)#m x_");
      byteArrayHashMap0.removeEntryForKey(byteArray0);
      assertEquals(0, byteArrayHashMap0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteArrayHashMap<Integer> byteArrayHashMap0 = new ByteArrayHashMap<Integer>(1, 0.75F);
      byte[] byteArray0 = new byte[2];
      Integer integer0 = byteArrayHashMap0.remove(byteArray0);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteArrayHashMap<Integer> byteArrayHashMap0 = new ByteArrayHashMap<Integer>();
      byte[] byteArray0 = new byte[0];
      Integer integer0 = new Integer(4061);
      byteArrayHashMap0.put(byteArray0, integer0);
      byteArrayHashMap0.remove(byteArray0);
      assertEquals(0, byteArrayHashMap0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteArrayHashMap<Object> byteArrayHashMap0 = new ByteArrayHashMap<Object>();
      byte[] byteArray0 = new byte[5];
      byteArrayHashMap0.put(byteArray0, byteArrayHashMap0);
      byteArrayHashMap0.put(byteArray0, byteArrayHashMap0);
      assertFalse(byteArrayHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteArrayHashMap<String> byteArrayHashMap0 = new ByteArrayHashMap<String>();
      List<byte[]> list0 = byteArrayHashMap0.keys();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteArrayHashMap<Object> byteArrayHashMap0 = new ByteArrayHashMap<Object>(204);
      byte[] byteArray0 = new byte[0];
      Object object0 = new Object();
      byteArrayHashMap0.put(byteArray0, object0);
      byteArrayHashMap0.keys();
      assertFalse(byteArrayHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteArrayHashMap<Object> byteArrayHashMap0 = new ByteArrayHashMap<Object>();
      boolean boolean0 = byteArrayHashMap0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteArrayHashMap<Object> byteArrayHashMap0 = new ByteArrayHashMap<Object>(204);
      byte[] byteArray0 = new byte[0];
      Object object0 = new Object();
      byteArrayHashMap0.put(byteArray0, object0);
      boolean boolean0 = byteArrayHashMap0.isEmpty();
      assertEquals(1, byteArrayHashMap0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteArrayHashMap<Object> byteArrayHashMap0 = new ByteArrayHashMap<Object>(1535, 3400.18F);
      byte[] byteArray0 = new byte[8];
      Object object0 = byteArrayHashMap0.get(byteArray0, 0, 0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteArrayHashMap<Integer> byteArrayHashMap0 = new ByteArrayHashMap<Integer>(878);
      byte[] byteArray0 = new byte[2];
      Integer integer0 = byteArrayHashMap0.get(byteArray0);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteArrayHashMap<Integer> byteArrayHashMap0 = new ByteArrayHashMap<Integer>(878);
      byte[] byteArray0 = new byte[2];
      ByteArrayHashMap<Object> byteArrayHashMap1 = new ByteArrayHashMap<Object>();
      byteArrayHashMap1.put(byteArray0, byteArrayHashMap0);
      byteArrayHashMap1.get(byteArray0);
      assertEquals(1, byteArrayHashMap1.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteArrayHashMap<Integer> byteArrayHashMap0 = new ByteArrayHashMap<Integer>(878);
      byte[] byteArray0 = new byte[2];
      ByteArrayHashMap<Object> byteArrayHashMap1 = new ByteArrayHashMap<Object>();
      byteArrayHashMap1.put(byteArray0, byteArrayHashMap0);
      byteArrayHashMap1.duplicate();
      assertEquals(1, byteArrayHashMap1.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteArrayHashMap<Object> byteArrayHashMap0 = new ByteArrayHashMap<Object>(31, 31);
      byte[] byteArray0 = new byte[1];
      boolean boolean0 = byteArrayHashMap0.containsKey(byteArray0);
      assertFalse(boolean0);
  }
}
