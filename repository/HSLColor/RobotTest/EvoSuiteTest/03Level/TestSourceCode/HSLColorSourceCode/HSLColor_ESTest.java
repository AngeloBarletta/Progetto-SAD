/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 21:10:15 GMT 2023
 */

package HSLColorSourceCode;

import org.junit.Test;
import static org.junit.Assert.*;
import HSLColorSourceCode.HSLColor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HSLColor_ESTest extends HSLColor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB((-1510), (-1510), 0);
      hSLColor0.setSaturation(0);
      hSLColor0.blend((-1510), (-2926), (-433), 0.22970815F);
      assertEquals((-927), hSLColor0.getRed());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.blend(0, 0, 0, 0);
      assertEquals(0, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.blend(0, 0, 1445, 1.0F);
      assertEquals(1445, hSLColor0.getBlue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.blend(1, 1, (-2336), (-2336));
      assertEquals(0, hSLColor0.getBlue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setLuminence(2748);
      hSLColor0.brighten(1.0F);
      assertEquals(255, hSLColor0.getLuminence());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.brighten(2028.0F);
      assertEquals(0, hSLColor0.getHue());
      assertEquals(0, hSLColor0.getSaturation());
      assertEquals(0, hSLColor0.getGreen());
      assertEquals(0, hSLColor0.getBlue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.brighten(0.0F);
      assertEquals(0, hSLColor0.getGreen());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.blend(170, 1128, 170, 170);
      hSLColor0.brighten(1128);
      assertEquals(85, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setLuminence((-1));
      assertEquals(0, hSLColor0.getBlue());
      assertEquals(0, hSLColor0.getHue());
      assertEquals(0, hSLColor0.getGreen());
      assertEquals(0, hSLColor0.getSaturation());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setSaturation(255);
      assertEquals(255, hSLColor0.getSaturation());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setHue(1993);
      assertEquals(208, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setHue(0);
      assertEquals(0, hSLColor0.getBlue());
      assertEquals(0, hSLColor0.getGreen());
      assertEquals(0, hSLColor0.getSaturation());
      assertEquals(0, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setHue((-790));
      assertEquals(230, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL(1392, 440, 440);
      assertEquals(440, hSLColor0.getLuminence());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setSaturation(765);
      hSLColor0.setHue(255);
      assertEquals(255, hSLColor0.getSaturation());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB((-273), 0, 0);
      hSLColor0.reverseColor();
      assertEquals((-136), hSLColor0.getLuminence());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.blend(170, 1128, 170, 170);
      hSLColor0.brighten((-790));
      assertEquals(0, hSLColor0.getGreen());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL(162, 162, 3507);
      hSLColor0.setLuminence(2097);
      assertEquals(162, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.blend(3976, 0, 1, 3976);
      hSLColor0.setHue(1);
      assertEquals((-292), hSLColor0.getSaturation());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getSaturation();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL(127, 127, 127);
      int int0 = hSLColor0.getSaturation();
      assertEquals(127, hSLColor0.getHue());
      assertEquals(127, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB(170, (-790), 170);
      int int0 = hSLColor0.getSaturation();
      assertEquals((-790), hSLColor0.getGreen());
      assertEquals((-394), int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getRed();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB(0, 0, 253);
      hSLColor0.reverseColor();
      int int0 = hSLColor0.getRed();
      assertEquals(255, hSLColor0.getSaturation());
      assertEquals(255, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB((-2484), (-2484), (-2484));
      int int0 = hSLColor0.getRed();
      assertEquals((-2484), hSLColor0.getGreen());
      assertEquals((-2484), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getLuminence();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL(127, 127, 127);
      int int0 = hSLColor0.getLuminence();
      assertEquals(127, hSLColor0.getSaturation());
      assertEquals(127, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL((-881), (-881), (-881));
      int int0 = hSLColor0.getLuminence();
      assertEquals((-881), hSLColor0.getHue());
      assertEquals((-881), int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getHue();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB((-1510), (-1510), 0);
      int int0 = hSLColor0.getHue();
      assertEquals((-1510), hSLColor0.getGreen());
      assertEquals(170, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL((-276), (-276), 1);
      int int0 = hSLColor0.getHue();
      assertEquals((-276), hSLColor0.getSaturation());
      assertEquals((-276), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getGreen();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL(127, 127, 127);
      int int0 = hSLColor0.getGreen();
      assertEquals(127, hSLColor0.getSaturation());
      assertEquals(193, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB((-1), 0, (-2467));
      hSLColor0.setSaturation((-1));
      int int0 = hSLColor0.getGreen();
      assertEquals((-1233), hSLColor0.getBlue());
      assertEquals((-1233), int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getBlue();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL((-276), (-276), 1);
      int int0 = hSLColor0.getBlue();
      assertEquals((-276), hSLColor0.getHue());
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB((-1), 0, (-2467));
      int int0 = hSLColor0.getBlue();
      assertEquals((-1), hSLColor0.getRed());
      assertEquals((-2467), int0);
  }
}
