/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 21:04:59 GMT 2023
 */

package HSLColorSourceCode;

import org.junit.Test;
import static org.junit.Assert.*;
import HSLColorSourceCode.HSLColor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HSLColor_ESTest extends HSLColor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getSaturation();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL(0, 42, 0);
      int int0 = hSLColor0.getSaturation();
      assertEquals(42, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.blend(127, 771, 1393, 127);
      int int0 = hSLColor0.getSaturation();
      assertEquals(771, hSLColor0.getGreen());
      assertEquals((-319), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getRed();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL(403, 403, (-1685));
      int int0 = hSLColor0.getRed();
      assertEquals(403, hSLColor0.getHue());
      assertEquals(255, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB((-3222), (-672), 1315);
      int int0 = hSLColor0.getRed();
      assertEquals((-672), hSLColor0.getGreen());
      assertEquals((-3222), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getLuminence();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB(21, 0, 21);
      int int0 = hSLColor0.getLuminence();
      assertEquals(21, hSLColor0.getRed());
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL(1910, 0, (-1));
      int int0 = hSLColor0.getLuminence();
      assertEquals(1910, hSLColor0.getHue());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getHue();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setHue(1);
      int int0 = hSLColor0.getHue();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL((-328), (-328), (-328));
      int int0 = hSLColor0.getHue();
      assertEquals((-328), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getGreen();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL(1102, 0, (-1));
      hSLColor0.brighten((-985.51F));
      int int0 = hSLColor0.getGreen();
      assertEquals(1102, hSLColor0.getHue());
      assertEquals(255, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL(0, (-1593), 1021);
      int int0 = hSLColor0.getGreen();
      assertEquals(1021, hSLColor0.getLuminence());
      assertEquals((-3762), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getBlue();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.blend(646, 646, 646, 646);
      int int0 = hSLColor0.getBlue();
      assertEquals(646, hSLColor0.getGreen());
      assertEquals(646, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL(403, 403, (-1685));
      int int0 = hSLColor0.getBlue();
      assertEquals(403, hSLColor0.getSaturation());
      assertEquals((-4346), int0);
  }
}
