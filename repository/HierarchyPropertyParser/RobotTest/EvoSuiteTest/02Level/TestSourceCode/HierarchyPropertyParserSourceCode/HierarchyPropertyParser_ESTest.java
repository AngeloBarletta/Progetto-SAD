/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 11:58:00 GMT 2023
 */

package HierarchyPropertyParserSourceCode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import HierarchyPropertyParserSourceCode.HierarchyPropertyParser;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HierarchyPropertyParser_ESTest extends HierarchyPropertyParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      Vector<String> vector0 = new Vector<String>();
      vector0.add((String) null);
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.search(vector0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.search(vector0, "#tYGzSFO)^z6Av");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to HierarchyPropertyParserSourceCode.HierarchyPropertyParser$TreeNode
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.isHierachic((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.setSeperator("<J%A:`{G`+PjT");
      hierarchyPropertyParser0.add("3VXQoc9NC`Dj(Fe");
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.goToChild((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.goTo("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.setSeperator("");
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.goTo("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.goDown((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.contains((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.contains("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      try { 
        hierarchyPropertyParser0.build((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("n{rGIhd/cpp?<", "n{rGIhd/cpp?<");
      try { 
        hierarchyPropertyParser0.build("G(%Z", "n{rGIhd/cpp?<");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The given property is not inhierachy structure with seperators!
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "");
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.add((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.add("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = null;
      try {
        hierarchyPropertyParser0 = new HierarchyPropertyParser((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.parentValue();
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(0, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("3VXQoc9NC`Dj(Fe");
      hierarchyPropertyParser0.childrenValues();
      assertTrue(hierarchyPropertyParser0.isLeafReached());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add(" sejdC");
      int int0 = hierarchyPropertyParser0.numChildren();
      assertTrue(hierarchyPropertyParser0.isLeafReached());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("l.{qM_Ee<6vm#(", "");
      int int0 = hierarchyPropertyParser0.numChildren();
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(1, int0);
      assertEquals("l", hierarchyPropertyParser0.getValue());
      assertEquals(2, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      try { 
        hierarchyPropertyParser0.goToChild(50);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Position out of range or leaf reached
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "=yZ;!4U{ywK}B");
      try { 
        hierarchyPropertyParser0.goToChild((-1157));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Position out of range or leaf reached
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("l.{qM_Ee<6vm#(", "");
      hierarchyPropertyParser0.goToChild(0);
      assertFalse(hierarchyPropertyParser0.isRootReached());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("Em1~SjjJI");
      try { 
        hierarchyPropertyParser0.goToChild((-2080374767));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Position out of range or leaf reached
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("3VXQoc9NC`Dj(Fe");
      boolean boolean0 = hierarchyPropertyParser0.goDown("");
      assertTrue(hierarchyPropertyParser0.isLeafReached());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.goToParent();
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(0, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      boolean boolean0 = hierarchyPropertyParser0.goDown("nMde1.node1_2.node1_2_1 node1_2__1r ");
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertFalse(boolean0);
      assertEquals(0, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("l.{qM_Ee<6vm#(", "");
      hierarchyPropertyParser0.add("l");
      boolean boolean0 = hierarchyPropertyParser0.goTo("l.{qM_Ee<6vm#(");
      assertTrue(hierarchyPropertyParser0.isLeafReached());
      assertEquals(2, hierarchyPropertyParser0.depth());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("3VXQoc9NC`Dj(Fe");
      hierarchyPropertyParser0.setSeperator("");
      boolean boolean0 = hierarchyPropertyParser0.goTo("}Ny");
      assertTrue(hierarchyPropertyParser0.isLeafReached());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("nMde1.node1_2.node1_2_1 node1_2__1r ");
      boolean boolean0 = hierarchyPropertyParser0.goTo("T=");
      assertEquals(1, hierarchyPropertyParser0.numChildren());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      assertEquals(".", hierarchyPropertyParser0.getSeperator());
      
      boolean boolean0 = hierarchyPropertyParser0.goDown("");
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("nMde1.node1_2.node1_2_1 node1_2__1r ");
      hierarchyPropertyParser0.add("T=");
      boolean boolean0 = hierarchyPropertyParser0.contains("nMde1.node1_2.node1_2_1 node1_2__1r ");
      assertTrue(hierarchyPropertyParser0.isLeafReached());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      boolean boolean0 = hierarchyPropertyParser0.contains("}Ny");
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertFalse(boolean0);
      assertEquals(".", hierarchyPropertyParser0.getSeperator());
      assertEquals(0, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("node1.node1_2.node1_2_1.node1_2_1_1, ", "node1.node1_2.node1_2_1.node1_2_1_1, ");
      hierarchyPropertyParser0.add("node1.node1_2.node1_2_1.node1_2_1_1, ");
      boolean boolean0 = hierarchyPropertyParser0.contains("node1.node1_2.node1_2_1.node1_2_1_1, ");
      assertEquals(1, hierarchyPropertyParser0.numChildren());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("node1.node1_2.node1_2_1.node1_2_1_1, ", "node1.node1_2.node1_2_1.node1_2_1_1, ");
      hierarchyPropertyParser0.add("node1.node1_2.node1_2_1.node1_2_1_1, ");
      hierarchyPropertyParser0.add("node1.node1_2.node1_2_1.node1_2_1_1, ");
      assertEquals(1, hierarchyPropertyParser0.numChildren());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = null;
      try {
        hierarchyPropertyParser0 = new HierarchyPropertyParser("z", "node1_)2_3");
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // The given property is not inhierachy structure with seperators!
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.setSeperator("");
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.goDown("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("l.{qM_Ee<6vm#(", "");
      String[] stringArray0 = hierarchyPropertyParser0.tokenize("");
      HierarchyPropertyParser.main(stringArray0);
      assertEquals(1, hierarchyPropertyParser0.numChildren());
      assertEquals(2, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertFalse(hierarchyPropertyParser0.isLeafReached());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser(")_{CO09RE1VD#%8pra", ")_{CO09RE1VD#%8pra");
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.tokenize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
