/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 11:46:19 GMT 2023
 */

package HierarchyPropertyParserSourceCode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import HierarchyPropertyParserSourceCode.HierarchyPropertyParser;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HierarchyPropertyParser_ESTest extends HierarchyPropertyParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      try { 
        hierarchyPropertyParser0.goToChild(876);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Position out of range or leaf reached
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser(" value: ", " value: ");
      hierarchyPropertyParser0.add(" value: ");
      hierarchyPropertyParser0.setSeperator(" value: ");
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.add(" value: ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "");
      hierarchyPropertyParser0.tokenize("");
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("node1_1.node1_1_1", "l");
      hierarchyPropertyParser0.numChildren();
      assertTrue(hierarchyPropertyParser0.isRootReached());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(2, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "|XZ?=j7:o/");
      hierarchyPropertyParser0.build("node1.node1_1.node1_1_1.node1_1_1_2, ", "");
      hierarchyPropertyParser0.getValue();
      assertEquals(4, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "|Sd**v@W ~Q J_<Q,X:");
      String string0 = hierarchyPropertyParser0.parentValue();
      hierarchyPropertyParser0.setSeperator(string0);
      hierarchyPropertyParser0.getSeperator();
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(0, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.setSeperator("");
      hierarchyPropertyParser0.getSeperator();
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("bTt|5yZik~'9J.I<", "3e+##8:cghB(V");
      hierarchyPropertyParser0.goToChild(0);
      int int0 = hierarchyPropertyParser0.getLevel();
      assertEquals(0, hierarchyPropertyParser0.numChildren());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("bTt|5yZik~'9J.I<", "3e+##8:cghB(V");
      int int0 = hierarchyPropertyParser0.depth();
      assertTrue(hierarchyPropertyParser0.isRootReached());
      assertEquals(2, int0);
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals("bTt|5yZik~'9J", hierarchyPropertyParser0.getValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("bTt|5yZik~'9J.I<", "3e+##8:cghB(V");
      hierarchyPropertyParser0.goToChild(0);
      hierarchyPropertyParser0.context();
      assertEquals("I<", hierarchyPropertyParser0.getValue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.childrenValues();
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(0, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("(level: ", "(level: ");
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.tokenize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer((-3779));
      vector0.add(integer0);
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.search(vector0, (String) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to HierarchyPropertyParserSourceCode.HierarchyPropertyParser$TreeNode
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "");
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.isHierachic((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("BnY@@5?lOef~.W~?s");
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.goToChild((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.setSeperator("");
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.goTo("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "=ac5tul9p3 IM (.");
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.goDown((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "");
      hierarchyPropertyParser0.setSeperator("i;P,wk'bS}");
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.goDown("i;P,wk'bS}");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.contains((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.contains("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("]/Jj8C\"s1\\])[+<w");
      try { 
        hierarchyPropertyParser0.build(">.g2=E\"\nw('", "diWZ*YD9?,");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.add((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = null;
      try {
        hierarchyPropertyParser0 = new HierarchyPropertyParser("D>)Z%0Q[|1v-S>", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = null;
      try {
        hierarchyPropertyParser0 = new HierarchyPropertyParser("d1D'Oa$pG4", "");
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // The given property is not inhierachy structure with seperators!
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[0];
      HierarchyPropertyParser.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("BnY@@5?lOef~.W~?s");
      hierarchyPropertyParser0.goTo("BnY@@5?lOef~.W~?s");
      hierarchyPropertyParser0.fullValue();
      assertEquals(1, hierarchyPropertyParser0.getLevel());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "");
      String string0 = hierarchyPropertyParser0.fullValue();
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      boolean boolean0 = hierarchyPropertyParser0.isRootReached();
      assertTrue(boolean0);
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("bTt|5yZik~'9J.I<", "3e+##8:cghB(V");
      hierarchyPropertyParser0.goToChild(0);
      boolean boolean0 = hierarchyPropertyParser0.isRootReached();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("+1>&(6Jk{", "+1>&(6Jk{");
      boolean boolean0 = hierarchyPropertyParser0.isLeafReached();
      assertFalse(boolean0);
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(0, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("bTt|5yZik~'9J.I<", "3e+##8:cghB(V");
      hierarchyPropertyParser0.goToChild(0);
      hierarchyPropertyParser0.parentValue();
      assertTrue(hierarchyPropertyParser0.isLeafReached());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("HierarchyPropertyParserSourceCode.HierarchyPropertyParser$TreeNode", "");
      hierarchyPropertyParser0.childrenValues();
      assertTrue(hierarchyPropertyParser0.isRootReached());
      assertEquals(2, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals("HierarchyPropertyParserSourceCode", hierarchyPropertyParser0.getValue());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "");
      boolean boolean0 = hierarchyPropertyParser0.goToChild("}38d'0");
      assertFalse(boolean0);
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("bTt|5yZik~'9J.I<", "3e+##8:cghB(V");
      hierarchyPropertyParser0.goToChild(0);
      assertFalse(hierarchyPropertyParser0.isRootReached());
      
      hierarchyPropertyParser0.goToParent();
      assertEquals(2, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "");
      boolean boolean0 = hierarchyPropertyParser0.goDown("");
      assertFalse(boolean0);
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("H*LXf=");
      boolean boolean0 = hierarchyPropertyParser0.goTo("H*LXf=");
      assertTrue(hierarchyPropertyParser0.isLeafReached());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "");
      Vector<String> vector0 = new Vector<String>();
      vector0.add((String) null);
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.search(vector0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "");
      Vector<String> vector0 = new Vector<String>();
      hierarchyPropertyParser0.search(vector0, "");
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(0, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.search((Vector) null, "!B");
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(0, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "");
      boolean boolean0 = hierarchyPropertyParser0.isHierachic("");
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertFalse(boolean0);
      assertEquals(0, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("+1>&(6Jk{", "+1>&(6Jk{");
      hierarchyPropertyParser0.isHierachic("HierarchyPropertyParserSourceCode.HierarchyPropertyParser$1");
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.tokenize("*S#`1_@lE");
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(0, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.context();
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      int int0 = hierarchyPropertyParser0.depth();
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "|XZ?=j7:o/");
      hierarchyPropertyParser0.goToRoot();
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(0, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "|XZ?=j7:o/");
      hierarchyPropertyParser0.getValue();
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "");
      hierarchyPropertyParser0.getSeperator();
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(0, hierarchyPropertyParser0.depth());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "|XZ?=j7:o/");
      String string0 = hierarchyPropertyParser0.showTree();
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals("null(0)[null]\n", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "|XZ?=j7:o/");
      hierarchyPropertyParser0.add("hr");
      int int0 = hierarchyPropertyParser0.numChildren();
      assertTrue(hierarchyPropertyParser0.isLeafReached());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      try { 
        hierarchyPropertyParser0.goToChild(0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Position out of range or leaf reached
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      try { 
        hierarchyPropertyParser0.goToChild((-260));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Position out of range or leaf reached
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("bTt|5yZik~'9J.I<", "3e+##8:cghB(V");
      hierarchyPropertyParser0.goToChild(0);
      hierarchyPropertyParser0.childrenValues();
      assertFalse(hierarchyPropertyParser0.isRootReached());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("oE[~h");
      try { 
        hierarchyPropertyParser0.goToChild(0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Position out of range or leaf reached
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "|XZ?=j7:o/");
      hierarchyPropertyParser0.add("hr");
      boolean boolean0 = hierarchyPropertyParser0.goToChild("|XZ?=j7:o/");
      assertTrue(hierarchyPropertyParser0.isLeafReached());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.goToParent();
      assertEquals(".", hierarchyPropertyParser0.getSeperator());
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      boolean boolean0 = hierarchyPropertyParser0.goDown("BnY@@5?lOef~.W~?s");
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(".", hierarchyPropertyParser0.getSeperator());
      assertFalse(boolean0);
      assertEquals(0, hierarchyPropertyParser0.getLevel());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("!Bv.2=?");
      hierarchyPropertyParser0.add("~ f)*");
      boolean boolean0 = hierarchyPropertyParser0.goTo("!Bv.2=?");
      assertTrue(hierarchyPropertyParser0.isLeafReached());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("oE[~h");
      boolean boolean0 = hierarchyPropertyParser0.goTo("nodu1.node1_.node1_1_1.node1_1_1_2,");
      assertTrue(hierarchyPropertyParser0.isLeafReached());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("bTt|5yZik~'9J.I<", "3e+##8:cghB(V");
      boolean boolean0 = hierarchyPropertyParser0.goTo(">6@u>U*");
      assertEquals("bTt|5yZik~'9J", hierarchyPropertyParser0.getValue());
      assertFalse(boolean0);
      assertEquals(1, hierarchyPropertyParser0.numChildren());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertEquals(2, hierarchyPropertyParser0.depth());
      assertTrue(hierarchyPropertyParser0.isRootReached());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      // Undeclared exception!
      try { 
        hierarchyPropertyParser0.goTo("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("!Bv.2=?");
      hierarchyPropertyParser0.add("~ f)*");
      boolean boolean0 = hierarchyPropertyParser0.contains("!Bv.2=?");
      assertTrue(hierarchyPropertyParser0.isLeafReached());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "nodc1");
      boolean boolean0 = hierarchyPropertyParser0.contains("1uA3Pw)%ZY:hol__q");
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(".", hierarchyPropertyParser0.getSeperator());
      assertFalse(boolean0);
      assertEquals(0, hierarchyPropertyParser0.getLevel());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("bTt|5yZik~'9J.I<", "3e+##8:cghB(V");
      boolean boolean0 = hierarchyPropertyParser0.contains("bTt|5yZik~'9J.I<");
      assertTrue(boolean0);
      assertEquals(2, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.add("!Bv.2=?");
      hierarchyPropertyParser0.build("!Bv.2=?", "@n8)bg+AzhiH13");
      assertEquals(1, hierarchyPropertyParser0.numChildren());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      try { 
        hierarchyPropertyParser0.build("!Tr", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The given property is not inhierachy structure with seperators!
         //
         verifyException("HierarchyPropertyParserSourceCode.HierarchyPropertyParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser();
      hierarchyPropertyParser0.setSeperator("");
      hierarchyPropertyParser0.build("node1_2", "sg>AqVe#2cn|pGD");
      boolean boolean0 = hierarchyPropertyParser0.isLeafReached();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser("", "");
      int int0 = hierarchyPropertyParser0.getLevel();
      assertEquals(0, int0);
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(".", hierarchyPropertyParser0.getSeperator());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HierarchyPropertyParser hierarchyPropertyParser0 = new HierarchyPropertyParser(" value: ", " value: ");
      boolean boolean0 = hierarchyPropertyParser0.isHierachic("null(0)[null]\n");
      assertEquals(0, hierarchyPropertyParser0.depth());
      assertEquals(0, hierarchyPropertyParser0.getLevel());
      assertFalse(boolean0);
  }
}
