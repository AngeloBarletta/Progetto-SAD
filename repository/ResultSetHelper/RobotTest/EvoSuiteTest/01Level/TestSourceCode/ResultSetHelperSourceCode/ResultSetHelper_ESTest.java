/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 12 00:43:17 GMT 2023
 */

package ResultSetHelperSourceCode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import ResultSetHelperSourceCode.ResultSetHelper;
import java.lang.reflect.Array;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultSetHelper_ESTest extends ResultSetHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class class0 = ResultSetHelper.typeToClass(4123);
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class class0 = ResultSetHelper.typeToClass(0);
      assertEquals("class java.lang.String", class0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = ResultSetHelper.typeIsNumeric((-5));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = ResultSetHelper.typeIsNumeric(4123);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 5);
      boolean boolean0 = resultSetHelper0.hasMaxRows();
      assertTrue(boolean0);
      assertEquals(5, resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null);
      boolean boolean0 = resultSetHelper0.hasMaxRows();
      assertFalse(boolean0);
      assertEquals(0, resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null);
      int int0 = resultSetHelper0.getRowCount();
      assertEquals(0, resultSetHelper0.getMaxRows());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet0).absolute(anyInt());
      doReturn(true, true).when(resultSet0).first();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(0).when(resultSet0).getRow();
      doReturn(0).when(resultSet0).getType();
      doReturn(false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 5);
      int int0 = resultSetHelper0.getRowCount();
      assertEquals(5, resultSetHelper0.getMaxRows());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null, 0);
      resultSetHelper0.m_RowCount = (-1);
      int int0 = resultSetHelper0.getRowCount();
      assertEquals(0, resultSetHelper0.getMaxRows());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null, (-1));
      resultSetHelper0.getResultSet();
      assertEquals((-1), resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 5);
      ResultSet resultSet1 = resultSetHelper0.getResultSet();
      assertEquals(5, resultSetHelper0.getMaxRows());
      assertNotNull(resultSet1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null);
      resultSetHelper0.getNumericColumns();
      assertEquals(0, resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null, 0);
      boolean[] booleanArray0 = new boolean[5];
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.getNumericColumns();
      assertEquals(0, resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null, (-1));
      boolean[] booleanArray0 = new boolean[0];
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.getNumericColumns();
      assertEquals((-1), resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null);
      int int0 = resultSetHelper0.getMaxRows();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 5);
      int int0 = resultSetHelper0.getMaxRows();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null, 0);
      resultSetHelper0.m_MaxRows = 1552;
      resultSetHelper0.m_MaxRows = (-1);
      int int0 = resultSetHelper0.getMaxRows();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null);
      resultSetHelper0.getColumnNames();
      assertEquals(0, resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      String[] stringArray0 = new String[3];
      resultSetHelper0.m_ColumnNames = stringArray0;
      resultSetHelper0.getColumnNames();
      assertEquals(0, resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      String[] stringArray0 = new String[0];
      resultSetHelper0.m_ColumnNames = stringArray0;
      resultSetHelper0.getColumnNames();
      assertEquals(0, resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null);
      int int0 = resultSetHelper0.getColumnCount();
      assertEquals(0, resultSetHelper0.getMaxRows());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.m_ColumnCount = (-1227);
      int int0 = resultSetHelper0.getColumnCount();
      assertEquals((-1227), int0);
      assertEquals(0, resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null, (-1));
      resultSetHelper0.getColumnClasses();
      assertEquals((-1), resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null);
      Class<Boolean>[] classArray0 = (Class<Boolean>[]) Array.newInstance(Class.class, 1);
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.getColumnClasses();
      assertEquals(0, resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet0).absolute(anyInt());
      doReturn(true, true).when(resultSet0).first();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(0).when(resultSet0).getRow();
      doReturn(0).when(resultSet0).getType();
      doReturn(false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 5);
      Class[] classArray0 = resultSetHelper0.getColumnClasses();
      assertEquals(5, resultSetHelper0.getMaxRows());
      assertNotNull(classArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet0).absolute(anyInt());
      doReturn(true, true, false).when(resultSet0).first();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(0).when(resultSet0).getRow();
      doReturn(0).when(resultSet0).getType();
      doReturn(false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 5);
      Object[][] objectArray0 = resultSetHelper0.getCells();
      assertEquals(0, objectArray0.length);
      
      resultSetHelper0.m_ColumnCount = 5;
      int int0 = resultSetHelper0.getColumnCount();
      assertEquals(5, resultSetHelper0.getMaxRows());
      assertEquals(5, int0);
  }
}
