/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 12 01:03:17 GMT 2023
 */

package ResultSetHelperSourceCode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ResultSetHelperSourceCode.ResultSetHelper;
import java.lang.reflect.Array;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Time;
import java.sql.Timestamp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResultSetHelper_ESTest extends ResultSetHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(287, (-3102), (-3102)).when(resultSetMetaData0).getColumnCount();
      ResultSetMetaData resultSetMetaData1 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      ResultSetMetaData resultSetMetaData2 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      Long long0 = new Long(287);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(true, true).when(resultSet0).first();
      doReturn(resultSetMetaData0, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(resultSet0).getObject(anyInt());
      doReturn(true, false, false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 991);
      resultSetHelper0.getNumericColumns();
      String[] stringArray0 = new String[0];
      resultSetHelper0.m_ColumnNames = stringArray0;
      resultSetHelper0.m_NumericColumns = null;
      resultSetHelper0.m_MaxRows = 991;
      Class<Time>[] classArray0 = (Class<Time>[]) Array.newInstance(Class.class, 9);
      Class<Time> class0 = Time.class;
      classArray0[0] = class0;
      Class<Time> class1 = Time.class;
      classArray0[1] = class1;
      Class<Time> class2 = Time.class;
      classArray0[2] = class2;
      Class<Time> class3 = Time.class;
      classArray0[3] = class3;
      Class<Time> class4 = Time.class;
      classArray0[4] = class4;
      Class<Time> class5 = Time.class;
      classArray0[5] = class5;
      Class<Time> class6 = Time.class;
      classArray0[6] = class6;
      Class<Time> class7 = Time.class;
      classArray0[7] = class7;
      Class<Time> class8 = Time.class;
      classArray0[8] = class8;
      resultSetHelper0.m_ColumnClasses = classArray0;
      ResultSetHelper.typeIsNumeric((-485));
      resultSetHelper0.m_ColumnCount = 991;
      resultSetHelper0.getRowCount();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.m_NumericColumns = null;
      resultSetHelper0.getCells();
      ResultSetHelper.typeToClass((-3987));
      resultSetHelper0.getColumnNames();
      ResultSetHelper.typeIsNumeric((-2448));
      resultSetHelper0.getCells();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getRowCount();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 1231);
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.m_MaxRows = (-1492);
      boolean[] booleanArray0 = new boolean[0];
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.m_ColumnCount = 1231;
      Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 4);
      Class<Integer> class0 = Integer.class;
      classArray0[0] = class0;
      Class<Integer> class1 = Integer.class;
      classArray0[1] = class1;
      Class<Integer> class2 = Integer.class;
      classArray0[2] = class2;
      Class<Integer> class3 = Integer.class;
      classArray0[3] = class3;
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.initialize();
      resultSetHelper0.initialize();
      resultSetHelper0.m_ColumnCount = (-7);
      resultSetHelper0.initialize();
      ResultSetHelper.typeIsNumeric(0);
      ResultSetHelper.typeToClass((-1));
      ResultSetHelper.typeIsNumeric((-7));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-2299)).when(resultSetMetaData0).getColumnCount();
      ResultSetMetaData resultSetMetaData1 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData1).getColumnCount();
      ResultSetMetaData resultSetMetaData2 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      ResultSetMetaData resultSetMetaData3 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(resultSet0).toString();
      doReturn(true, true, false, false, false).when(resultSet0).first();
      doReturn(resultSetMetaData0, resultSetMetaData1).when(resultSet0).getMetaData();
      doReturn(0, 0).when(resultSet0).getRow();
      doReturn(0).when(resultSet0).getType();
      doReturn(false).when(resultSet0).last();
      doReturn(true).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.getCells();
      resultSetHelper0.m_MaxRows = 0;
      resultSetHelper0.m_Initialized = true;
      resultSetHelper0.m_ColumnCount = 0;
      Class[] classArray0 = resultSetHelper0.getColumnClasses();
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.getResultSet();
      resultSetHelper0.getMaxRows();
      ResultSetHelper.typeToClass((-1));
      resultSetHelper0.getColumnCount();
      ResultSetHelper.typeIsNumeric(0);
      resultSetHelper0.getCells();
      resultSetHelper0.getCells();
      resultSetHelper0.getResultSet();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(resultSet0).first();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(0).when(resultSet0).getRow();
      doReturn(0).when(resultSet0).getType();
      doReturn(false).when(resultSet0).last();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = ",{9";
      stringArray0[2] = "?3VR6q";
      stringArray0[3] = "";
      stringArray0[4] = "#Z\"RDvznJ,nq;]TWCP";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      resultSetHelper0.m_ColumnNames = stringArray0;
      resultSetHelper0.getColumnClasses();
      ResultSetHelper.typeIsNumeric((-5));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-3645), (-1)).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      doReturn(true, true, false).when(resultSet0).first();
      doReturn(resultSetMetaData0, resultSetMetaData0, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      doReturn(true, false, false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 0);
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = false;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.getResultSet();
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getColumnNames();
      ResultSetHelper.typeIsNumeric(0);
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getCells();
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getCells();
      resultSetHelper0.getCells();
      resultSetHelper0.initialize();
      resultSetHelper0.m_Initialized = false;
      resultSetHelper0.initialize();
      Class<Timestamp>[] classArray0 = (Class<Timestamp>[]) Array.newInstance(Class.class, 8);
      Class<Timestamp> class0 = Timestamp.class;
      classArray0[0] = class0;
      Class<Timestamp> class1 = Timestamp.class;
      classArray0[1] = class1;
      Class<Timestamp> class2 = Timestamp.class;
      classArray0[2] = class2;
      Class<Timestamp> class3 = Timestamp.class;
      classArray0[3] = class3;
      Class<Timestamp> class4 = Timestamp.class;
      classArray0[4] = class4;
      Class<Timestamp> class5 = Timestamp.class;
      classArray0[5] = class5;
      Class<Timestamp> class6 = Timestamp.class;
      classArray0[6] = class6;
      Class<Timestamp> class7 = Timestamp.class;
      classArray0[7] = class7;
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.initialize();
      resultSetHelper0.hasMaxRows();
      ResultSetHelper.typeToClass(0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(642, (-2153), 642, 642, 642).when(resultSetMetaData0).getColumnCount();
      doReturn(642, (-2153), 642, 12, 642).when(resultSetMetaData0).getColumnType(anyInt());
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet0).absolute(anyInt());
      doReturn(false, true).when(resultSet0).first();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(resultSet0).getObject(anyInt());
      doReturn((-2)).when(resultSet0).getRow();
      doReturn((-565)).when(resultSet0).getType();
      doReturn(true, false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.m_ColumnCount = 0;
      resultSetHelper0.m_MaxRows = 1;
      ResultSetHelper.typeIsNumeric(0);
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getColumnClasses();
      ResultSetHelper.typeIsNumeric(0);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[4] = false;
      booleanArray0[4] = false;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.getCells();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(1748, 371, 792, 772, 447).when(resultSetMetaData0).getColumnCount();
      doReturn("", ")S,gY4O3", (String) null, "0/x</}Q>OmslOujHpXT", "*Nl)P E(dY5SJ").when(resultSetMetaData0).getColumnLabel(anyInt());
      doReturn((-4), (-303), (-303), (-3992), (-3992)).when(resultSetMetaData0).getColumnType(anyInt());
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(resultSet0).absolute(anyInt());
      doReturn(false, true).when(resultSet0).first();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(resultSet0).getObject(anyInt());
      doReturn(1748).when(resultSet0).getRow();
      doReturn(371).when(resultSet0).getType();
      doReturn(true, false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 1767);
      resultSetHelper0.initialize();
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = true;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = ")r5h4yK{vhbyS";
      stringArray0[3] = ";`,G";
      resultSetHelper0.m_ColumnNames = stringArray0;
      booleanArray0[2] = false;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getCells();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.m_Initialized = false;
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.initialize();
      resultSetHelper0.getCells();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.getColumnClasses();
      ResultSetHelper.typeToClass(3);
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(resultSet1).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet1).getMetaData();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.m_ResultSet = resultSet1;
      ResultSetHelper.typeIsNumeric(3);
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.initialize();
      resultSetHelper0.getCells();
      ResultSetHelper.typeIsNumeric(820);
      resultSetHelper0.initialize();
      resultSetHelper0.getCells();
      ResultSetHelper.typeIsNumeric((-1));
      ResultSetHelper.typeToClass(92);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResultSetHelper.typeToClass(5);
      ResultSetHelper.typeIsNumeric(5);
      ResultSetHelper.typeToClass(5);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 280);
      resultSetHelper0.m_MaxRows = 5;
      resultSetHelper0.getCells();
      resultSetHelper0.getCells();
      resultSetHelper0.initialize();
      resultSetHelper0.getCells();
      ResultSetHelper.typeIsNumeric(5);
      resultSetHelper0.initialize();
      ResultSetHelper.typeToClass(0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResultSetHelper.typeToClass(91);
      ResultSetHelper.typeToClass(91);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      doReturn(false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.m_MaxRows = 91;
      resultSetHelper0.m_RowCount = 6;
      resultSetHelper0.m_Initialized = false;
      resultSetHelper0.m_MaxRows = 91;
      resultSetHelper0.getCells();
      resultSetHelper0.getRowCount();
      ResultSetHelper.typeIsNumeric(91);
      resultSetHelper0.getColumnCount();
      String[] stringArray0 = new String[4];
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getRowCount();
      stringArray0[0] = "";
      stringArray0[1] = "# OZ9";
      stringArray0[2] = "P9'[";
      stringArray0[3] = "";
      resultSetHelper0.m_ColumnNames = stringArray0;
      ResultSetHelper.typeToClass(91);
      ResultSetHelper.typeToClass(0);
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.getResultSet();
      ResultSetHelper.typeIsNumeric((-341));
      ResultSetHelper.typeIsNumeric(6);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData0).getColumnCount();
      ResultSetMetaData resultSetMetaData1 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      ResultSetMetaData resultSetMetaData2 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet0).absolute(anyInt());
      doReturn(true, true, false, false).when(resultSet0).first();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(0).when(resultSet0).getRow();
      doReturn(0).when(resultSet0).getType();
      doReturn(false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 991);
      boolean[] booleanArray0 = resultSetHelper0.getNumericColumns();
      String[] stringArray0 = new String[0];
      resultSetHelper0.m_ColumnNames = stringArray0;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.m_MaxRows = 991;
      Class<Time>[] classArray0 = (Class<Time>[]) Array.newInstance(Class.class, 9);
      Class<Time> class0 = Time.class;
      classArray0[0] = class0;
      Class<Time> class1 = Time.class;
      classArray0[1] = class1;
      Class<Time> class2 = Time.class;
      classArray0[2] = class2;
      Class<Time> class3 = Time.class;
      classArray0[3] = class3;
      Class<Time> class4 = Time.class;
      classArray0[4] = class4;
      Class<Time> class5 = Time.class;
      classArray0[5] = class5;
      Class<Time> class6 = Time.class;
      classArray0[6] = class6;
      Class<Time> class7 = Time.class;
      classArray0[7] = class7;
      Class<Time> class8 = Time.class;
      classArray0[8] = class8;
      resultSetHelper0.m_ColumnClasses = classArray0;
      ResultSetHelper.typeIsNumeric((-485));
      resultSetHelper0.m_ColumnCount = 991;
      resultSetHelper0.getRowCount();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.getCells();
      ResultSetHelper.typeToClass((-3987));
      resultSetHelper0.getColumnNames();
      ResultSetHelper.typeIsNumeric((-2448));
      resultSetHelper0.getCells();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getRowCount();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(resultSet0).toString();
      doReturn(false).when(resultSet0).absolute(anyInt());
      doReturn(false, false, false, true, false).when(resultSet0).first();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(0).when(resultSet0).getRow();
      doReturn(0).when(resultSet0).getType();
      doReturn(false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 1316);
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getRowCount();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.m_RowCount = 1316;
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getRowCount();
      resultSetHelper0.m_ColumnCount = 1316;
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getResultSet();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getResultSet();
      resultSetHelper0.getCells();
      resultSetHelper0.getColumnCount();
      ResultSetHelper.typeToClass(1316);
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getCells();
      resultSetHelper0.getRowCount();
      resultSetHelper0.getCells();
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.m_RowCount = 1111;
      resultSetHelper0.getRowCount();
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getRowCount();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getCells();
      resultSetHelper0.getColumnClasses();
      ResultSetHelper.typeIsNumeric(1316);
      resultSetHelper0.getRowCount();
      resultSetHelper0.initialize();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-3446)).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(resultSet1).toString();
      doReturn(true).when(resultSet1).first();
      doReturn(resultSetMetaData0, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet1).getMetaData();
      doReturn(true, false).when(resultSet1).next();
      resultSetHelper0.m_ColumnCount = 1275;
      resultSetHelper0.m_ResultSet = resultSet1;
      resultSetHelper0.getResultSet();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.m_Initialized = false;
      resultSetHelper0.m_ColumnNames = null;
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getResultSet();
      resultSetHelper0.m_ColumnNames = null;
      resultSetHelper0.getCells();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.m_ColumnCount = 1;
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.hasMaxRows();
      ResultSetHelper.typeToClass(93);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResultSetHelper.typeIsNumeric(2759);
      ResultSetHelper.typeIsNumeric(2759);
      ResultSetHelper.typeIsNumeric(3);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet1).getMetaData();
      resultSetHelper0.m_ResultSet = resultSet1;
      resultSetHelper0.initialize();
      resultSetHelper0.initialize();
      ResultSetHelper.typeToClass(4969);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(1396, 1396, 1396, 1396, 4988).when(resultSetMetaData0).getColumnCount();
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(resultSetMetaData0).getColumnLabel(anyInt());
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(resultSet0).first();
      doReturn(resultSetMetaData0, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, (-7));
      resultSetHelper0.initialize();
      resultSetHelper0.getColumnCount();
      boolean[] booleanArray0 = new boolean[0];
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.m_MaxRows = 2064;
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getCells();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.getRowCount();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.getCells();
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getRowCount();
      resultSetHelper0.initialize();
      resultSetHelper0.initialize();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(1, 1, 1, 2322, (-1265)).when(resultSetMetaData0).getColumnCount();
      doReturn((String) null).when(resultSetMetaData0).getColumnLabel(anyInt());
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(resultSet0).first();
      doReturn(resultSetMetaData0, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      doReturn(true, false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.m_ColumnCount = 0;
      resultSetHelper0.m_MaxRows = 1;
      ResultSetHelper.typeIsNumeric(0);
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getColumnClasses();
      ResultSetHelper.typeIsNumeric(0);
      boolean[] booleanArray0 = new boolean[5];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.getCells();
      ResultSetHelper.typeToClass(0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      doReturn(true, true, false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      doReturn(false, true, false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 0);
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = false;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.getResultSet();
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getColumnNames();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getCells();
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getCells();
      resultSetHelper0.getCells();
      resultSetHelper0.initialize();
      resultSetHelper0.m_Initialized = false;
      resultSetHelper0.initialize();
      Class<Timestamp>[] classArray0 = (Class<Timestamp>[]) Array.newInstance(Class.class, 8);
      Class<Timestamp> class0 = Timestamp.class;
      classArray0[0] = class0;
      Class<Timestamp> class1 = Timestamp.class;
      classArray0[1] = class1;
      Class<Timestamp> class2 = Timestamp.class;
      classArray0[2] = class2;
      Class<Timestamp> class3 = Timestamp.class;
      classArray0[3] = class3;
      Class<Timestamp> class4 = Timestamp.class;
      classArray0[4] = class4;
      Class<Timestamp> class5 = Timestamp.class;
      classArray0[5] = class5;
      Class<Timestamp> class6 = Timestamp.class;
      classArray0[6] = class6;
      Class<Timestamp> class7 = Timestamp.class;
      classArray0[7] = class7;
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.initialize();
      resultSetHelper0.hasMaxRows();
      ResultSetHelper.typeToClass(0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResultSetHelper.typeToClass(2006);
      ResultSetHelper.typeIsNumeric(2423);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.m_Initialized = false;
      resultSetHelper0.m_Initialized = false;
      Class<Long>[] classArray0 = (Class<Long>[]) Array.newInstance(Class.class, 8);
      Class<Long> class0 = Long.class;
      classArray0[0] = class0;
      Class<Long> class1 = Long.class;
      classArray0[1] = class1;
      resultSetHelper0.m_RowCount = 2006;
      Class<Long> class2 = Long.class;
      classArray0[2] = class2;
      Class<Long> class3 = Long.class;
      classArray0[3] = class3;
      Class<Long> class4 = Long.class;
      classArray0[4] = class4;
      Class<Long> class5 = Long.class;
      classArray0[5] = class5;
      Class<Long> class6 = Long.class;
      classArray0[6] = class6;
      Class<Long> class7 = Long.class;
      resultSetHelper0.getColumnClasses();
      classArray0[7] = class7;
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.getRowCount();
      resultSetHelper0.initialize();
      resultSetHelper0.getCells();
      resultSetHelper0.getCells();
      ResultSetHelper.typeToClass((-2394));
      ResultSetHelper.typeIsNumeric((-2));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResultSetHelper.typeToClass((-5));
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, (-5));
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.m_NumericColumns = null;
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 6);
      Class<String> class0 = String.class;
      classArray0[0] = class0;
      Class<String> class1 = String.class;
      classArray0[1] = class1;
      Class<String> class2 = String.class;
      classArray0[2] = class2;
      Class<String> class3 = String.class;
      classArray0[3] = class3;
      Class<String> class4 = String.class;
      classArray0[4] = class4;
      Class<String> class5 = String.class;
      classArray0[5] = class5;
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.m_Initialized = true;
      resultSetHelper0.initialize();
      resultSetHelper0.getCells();
      ResultSetHelper.typeToClass((-589));
      ResultSetHelper.typeToClass((-589));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(resultSet1).toString();
      doReturn(true, false, false).when(resultSet1).first();
      doReturn(resultSetMetaData0).when(resultSet1).getMetaData();
      doReturn(0).when(resultSet1).getRow();
      doReturn(0).when(resultSet1).getType();
      doReturn(false).when(resultSet1).last();
      resultSetHelper0.m_ColumnCount = 1275;
      resultSetHelper0.m_ResultSet = resultSet1;
      resultSetHelper0.getResultSet();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.m_Initialized = false;
      resultSetHelper0.m_ColumnNames = null;
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getResultSet();
      resultSetHelper0.getCells();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.m_ColumnCount = 1;
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.hasMaxRows();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(resultSet0).first();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(0).when(resultSet0).getRow();
      doReturn(0).when(resultSet0).getType();
      doReturn(false).when(resultSet0).last();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.getRowCount();
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet1).toString();
      doReturn(false).when(resultSet1).first();
      resultSetHelper0.m_ResultSet = resultSet1;
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.getCells();
      resultSetHelper0.getRowCount();
      resultSetHelper0.getResultSet();
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.hasMaxRows();
      ResultSetHelper.typeIsNumeric(1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResultSetHelper.typeIsNumeric(2079);
      ResultSetHelper.typeToClass(886);
      ResultSetHelper.typeToClass(4);
      ResultSetHelper.typeIsNumeric(886);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 4);
      resultSetHelper0.getCells();
      Class<Boolean>[] classArray0 = (Class<Boolean>[]) Array.newInstance(Class.class, 4);
      Class<Boolean> class0 = Boolean.class;
      classArray0[0] = class0;
      Class<Boolean> class1 = Boolean.class;
      classArray0[1] = class1;
      Class<Boolean> class2 = Boolean.class;
      classArray0[2] = class2;
      Class<Boolean> class3 = Boolean.class;
      classArray0[3] = class3;
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.m_RowCount = 865;
      resultSetHelper0.m_MaxRows = 1;
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.getCells();
      resultSetHelper0.getCells();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet0).absolute(anyInt());
      doReturn(false, false).when(resultSet0).first();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(0).when(resultSet0).getRow();
      doReturn(0).when(resultSet0).getType();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 463);
      Class<Long>[] classArray0 = (Class<Long>[]) Array.newInstance(Class.class, 1);
      Class<Long> class0 = Long.class;
      classArray0[0] = class0;
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.m_MaxRows = 463;
      resultSetHelper0.m_NumericColumns = null;
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.initialize();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getRowCount();
      resultSetHelper0.getRowCount();
      ResultSetHelper.typeToClass(1358);
      ResultSetHelper.typeToClass(1358);
      resultSetHelper0.getColumnCount();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(resultSet0).first();
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.m_Initialized = true;
      resultSetHelper0.getCells();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResultSetHelper.typeIsNumeric(0);
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(resultSet0).first();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(0).when(resultSet0).getRow();
      doReturn(0).when(resultSet0).getType();
      doReturn(false).when(resultSet0).last();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 0);
      resultSetHelper0.getRowCount();
      resultSetHelper0.getRowCount();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResultSetHelper.typeIsNumeric(0);
      ResultSetHelper.typeIsNumeric(1335);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 0);
      resultSetHelper0.getColumnNames();
      String[] stringArray0 = new String[1];
      resultSetHelper0.m_ColumnCount = 1;
      resultSetHelper0.getNumericColumns();
      stringArray0[0] = "ResultSetHelperSourceCode.ResultSetHelper";
      resultSetHelper0.m_ColumnNames = stringArray0;
      resultSetHelper0.m_RowCount = 1335;
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getCells();
      ResultSetHelper.typeToClass(1);
      resultSetHelper0.getMaxRows();
      resultSetHelper0.initialize();
      resultSetHelper0.getCells();
      resultSetHelper0.getCells();
      ResultSetHelper.typeIsNumeric((-864));
      resultSetHelper0.getColumnCount();
      resultSetHelper0.initialize();
      ResultSetHelper.typeIsNumeric(92);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResultSetHelper.typeIsNumeric(93);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.m_RowCount = 93;
      Class<Long>[] classArray0 = (Class<Long>[]) Array.newInstance(Class.class, 8);
      Class<Long> class0 = Long.class;
      classArray0[0] = class0;
      Class<Long> class1 = Long.class;
      classArray0[1] = class1;
      Class<Long> class2 = Long.class;
      classArray0[2] = class2;
      Class<Long> class3 = Long.class;
      classArray0[3] = class3;
      Class<Long> class4 = Long.class;
      classArray0[4] = class4;
      Class<Long> class5 = Long.class;
      classArray0[5] = class5;
      Class<Long> class6 = Long.class;
      classArray0[6] = class6;
      Class<Long> class7 = Long.class;
      classArray0[7] = class7;
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.m_ResultSet = null;
      resultSetHelper0.m_Initialized = true;
      resultSetHelper0.initialize();
      resultSetHelper0.getResultSet();
      resultSetHelper0.getColumnNames();
      resultSetHelper0.hasMaxRows();
      ResultSetHelper.typeToClass(93);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getRowCount();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getRowCount();
      Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 0);
      resultSetHelper0.getNumericColumns();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      resultSetHelper0.m_ColumnNames = stringArray0;
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.getRowCount();
      ResultSetHelper.typeToClass(2243);
      resultSetHelper0.getCells();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.m_MaxRows = 2243;
      resultSetHelper0.initialize();
      resultSetHelper0.m_MaxRows = 0;
      resultSetHelper0.getColumnCount();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.initialize();
      ResultSetHelper.typeToClass((-2));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null, 4);
      resultSetHelper0.getColumnCount();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "EX";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "ResultSetHelperSourceCode.ResultSetHelper";
      stringArray0[8] = "";
      resultSetHelper0.m_ColumnNames = stringArray0;
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.m_MaxRows = 4158;
      resultSetHelper0.m_Initialized = true;
      resultSetHelper0.getColumnCount();
      ResultSetHelper.typeToClass(1746);
      ResultSetHelper.typeIsNumeric(4);
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.getColumnNames();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResultSetHelper.typeToClass(1111);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 2843);
      resultSetHelper0.m_ColumnCount = 4223;
      resultSetHelper0.m_Initialized = true;
      resultSetHelper0.getNumericColumns();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResultSetHelper.typeToClass(12);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResultSetHelper.typeToClass((-4));
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 1893);
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getColumnNames();
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet1).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet1).getMetaData();
      resultSetHelper0.m_ResultSet = resultSet1;
      resultSetHelper0.initialize();
      resultSetHelper0.initialize();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.m_RowCount = (-3);
      int int0 = (-936);
      resultSetHelper0.m_ColumnCount = (-936);
      resultSetHelper0.m_RowCount = (-936);
      // Undeclared exception!
      try { 
        resultSetHelper0.getCells();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ResultSetHelperSourceCode.ResultSetHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, (-579));
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = false;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = false;
      booleanArray0[8] = false;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      Class<Character>[] classArray0 = (Class<Character>[]) Array.newInstance(Class.class, 2);
      Class<Character> class0 = Character.class;
      classArray0[0] = class0;
      Class<Character> class1 = Character.class;
      classArray0[1] = class1;
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getCells();
      ResultSetHelper.typeIsNumeric(8);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResultSetHelper.typeIsNumeric(1);
      ResultSetHelper.typeToClass(5);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(resultSet1).toString();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet1).getMetaData();
      resultSetHelper0.m_ResultSet = resultSet1;
      resultSetHelper0.initialize();
      resultSetHelper0.getResultSet();
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = true;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      ResultSetHelper.typeIsNumeric((-3));
      resultSetHelper0.getColumnNames();
      ResultSetHelper.typeIsNumeric(0);
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getColumnClasses();
      ResultSetHelper.typeIsNumeric(439);
      resultSetHelper0.getResultSet();
      resultSetHelper0.getRowCount();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getColumnCount();
      ResultSetHelper.typeToClass(439);
      resultSetHelper0.m_Initialized = false;
      ResultSetHelper.typeIsNumeric(513);
      resultSetHelper0.initialize();
      ResultSetHelper.typeIsNumeric(0);
      ResultSetHelper.typeToClass(173);
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.getMaxRows();
      resultSetHelper0.hasMaxRows();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null, (-1));
      Class<Float>[] classArray0 = (Class<Float>[]) Array.newInstance(Class.class, 6);
      Class<Float> class0 = Float.class;
      classArray0[0] = class0;
      Class<Float> class1 = Float.class;
      classArray0[1] = class1;
      Class<Float> class2 = Float.class;
      classArray0[2] = class2;
      Class<Float> class3 = Float.class;
      classArray0[3] = class3;
      Class<Float> class4 = Float.class;
      classArray0[4] = class4;
      Class<Float> class5 = Float.class;
      classArray0[5] = class5;
      resultSetHelper0.m_ColumnClasses = classArray0;
      ResultSetHelper.typeToClass((-1));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, (-7));
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.m_RowCount = (-7);
      resultSetHelper0.m_NumericColumns = null;
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getCells();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.initialize();
      resultSetHelper0.getCells();
      ResultSetHelper.typeToClass((-7));
      resultSetHelper0.getRowCount();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.initialize();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getMaxRows();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 8);
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getMaxRows();
      resultSetHelper0.m_Initialized = true;
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getNumericColumns();
      ResultSetHelper.typeToClass(8);
      resultSetHelper0.getCells();
      resultSetHelper0.getMaxRows();
      resultSetHelper0.hasMaxRows();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.getCells();
      resultSetHelper0.m_RowCount = (-3989);
      resultSetHelper0.m_Initialized = false;
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getRowCount();
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.getColumnCount();
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      resultSetHelper0.m_Initialized = false;
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.m_ColumnCount = (-90);
      // Undeclared exception!
      try { 
        resultSetHelper0.getCells();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ResultSetHelperSourceCode.ResultSetHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null);
      resultSetHelper0.getCells();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResultSetHelper.typeIsNumeric((-1));
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 1);
      resultSetHelper0.hasMaxRows();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResultSetHelper.typeToClass(0);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      doReturn(false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.m_RowCount = 0;
      resultSetHelper0.m_MaxRows = 0;
      String[] stringArray0 = new String[2];
      Class<Date>[] classArray0 = (Class<Date>[]) Array.newInstance(Class.class, 7);
      Class<Date> class0 = Date.class;
      classArray0[0] = class0;
      Class<Date> class1 = Date.class;
      classArray0[1] = class1;
      Class<Date> class2 = Date.class;
      classArray0[2] = class2;
      Class<Date> class3 = Date.class;
      classArray0[3] = class3;
      Class<Date> class4 = Date.class;
      classArray0[4] = class4;
      Class<Date> class5 = Date.class;
      classArray0[5] = class5;
      Class<Date> class6 = Date.class;
      classArray0[6] = class6;
      resultSetHelper0.m_ColumnClasses = classArray0;
      stringArray0[0] = "j4M}}sNEvzy|.*Z?.~";
      stringArray0[1] = "nY&'#y65|nz";
      resultSetHelper0.m_ColumnNames = stringArray0;
      resultSetHelper0.getResultSet();
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.getNumericColumns();
      ResultSetHelper.typeToClass(6);
      resultSetHelper0.getCells();
      resultSetHelper0.initialize();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      Class<Long>[] classArray0 = (Class<Long>[]) Array.newInstance(Class.class, 1);
      Class<Long> class0 = Long.class;
      classArray0[0] = class0;
      Class<Character>[] classArray1 = (Class<Character>[]) Array.newInstance(Class.class, 7);
      Class<Character> class1 = Character.class;
      classArray1[0] = class1;
      Class<Character> class2 = Character.class;
      classArray1[1] = class2;
      Class<Character> class3 = Character.class;
      classArray1[2] = class3;
      Class<Character> class4 = Character.class;
      classArray1[3] = class4;
      Class<Character> class5 = Character.class;
      classArray1[4] = class5;
      Class<Character> class6 = Character.class;
      classArray1[5] = class6;
      Class<Character> class7 = Character.class;
      classArray1[6] = class7;
      resultSetHelper0.m_ColumnClasses = classArray1;
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.getRowCount();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.m_RowCount = 1123;
      resultSetHelper0.m_MaxRows = (-6);
      resultSetHelper0.getColumnCount();
      ResultSetHelper.typeToClass(412);
      resultSetHelper0.initialize();
      resultSetHelper0.getNumericColumns();
      ResultSetHelper.typeToClass(92);
      resultSetHelper0.getMaxRows();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResultSetHelper.typeToClass(374);
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null, 374);
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.m_Initialized = false;
      resultSetHelper0.m_MaxRows = 3559;
      resultSetHelper0.m_MaxRows = 382;
      Class<Boolean>[] classArray0 = (Class<Boolean>[]) Array.newInstance(Class.class, 0);
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.getColumnCount();
      Class<Time>[] classArray1 = (Class<Time>[]) Array.newInstance(Class.class, 6);
      Class<Time> class0 = Time.class;
      classArray1[0] = class0;
      Class<Time> class1 = Time.class;
      classArray1[1] = class1;
      Class<Time> class2 = Time.class;
      classArray1[2] = class2;
      Class<Time> class3 = Time.class;
      classArray1[3] = class3;
      Class<Time> class4 = Time.class;
      classArray1[4] = class4;
      Class<Time> class5 = Time.class;
      classArray1[5] = class5;
      resultSetHelper0.m_ColumnClasses = classArray1;
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getColumnCount();
      resultSetHelper0.m_NumericColumns = null;
      resultSetHelper0.getMaxRows();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.getColumnClasses();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null, (-746));
      resultSetHelper0.m_MaxRows = (-746);
      resultSetHelper0.m_ResultSet = null;
      boolean[] booleanArray0 = new boolean[8];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      booleanArray0[7] = true;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.m_NumericColumns = null;
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getColumnClasses();
      ResultSetHelper.typeToClass((-746));
      ResultSetHelper.typeIsNumeric(0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.getColumnClasses();
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      resultSetHelper0.m_ResultSet = resultSet1;
      boolean[] booleanArray0 = new boolean[5];
      resultSetHelper0.m_Initialized = true;
      booleanArray0[0] = false;
      resultSetHelper0.initialize();
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      resultSetHelper0.getColumnNames();
      resultSetHelper0.m_ResultSet = null;
      resultSetHelper0.m_RowCount = (-2538);
      booleanArray0[4] = false;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.getRowCount();
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getRowCount();
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.initialize();
      ResultSetHelper.typeIsNumeric(1111);
      resultSetHelper0.getRowCount();
      resultSetHelper0.getColumnClasses();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null, 320);
      resultSetHelper0.m_Initialized = true;
      resultSetHelper0.getColumnClasses();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null, (-1102));
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getRowCount();
      ResultSetHelper.typeIsNumeric(2);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      doReturn(false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      resultSetHelper0.getCells();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      resultSetHelper0.m_ColumnNames = stringArray0;
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getResultSet();
      ResultSetHelper.typeIsNumeric(91);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResultSetHelper.typeIsNumeric((-747));
      ResultSetHelper.typeIsNumeric((-747));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null, 0);
      resultSetHelper0.m_ResultSet = null;
      resultSetHelper0.getColumnNames();
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = false;
      booleanArray0[3] = true;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getResultSet();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResultSetHelper.typeToClass(0);
      ResultSetHelper resultSetHelper0 = new ResultSetHelper((ResultSet) null);
      resultSetHelper0.m_Initialized = false;
      resultSetHelper0.m_RowCount = 0;
      resultSetHelper0.getColumnNames();
      resultSetHelper0.initialize();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getColumnNames();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResultSetHelper.typeIsNumeric(2689);
      ResultSetHelper.typeToClass(2689);
      ResultSetHelper.typeToClass((-6));
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet0).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, (-736));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = false;
      booleanArray0[6] = false;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      stringArray0[2] = "";
      resultSetHelper0.m_ColumnNames = stringArray0;
      resultSetHelper0.getCells();
      resultSetHelper0.initialize();
      ResultSetHelper.typeIsNumeric((-6));
      ResultSetHelper.typeIsNumeric((-736));
      ResultSetHelper.typeToClass(2389);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      doReturn(false).when(resultSet0).absolute(anyInt());
      doReturn(true, true, false, false).when(resultSet0).first();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(0).when(resultSet0).getRow();
      doReturn(0).when(resultSet0).getType();
      doReturn(false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 92);
      resultSetHelper0.getColumnCount();
      resultSetHelper0.getCells();
      resultSetHelper0.initialize();
      resultSetHelper0.m_Initialized = true;
      resultSetHelper0.getRowCount();
      resultSetHelper0.m_RowCount = 0;
      resultSetHelper0.getCells();
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getNumericColumns();
      resultSetHelper0.getResultSet();
      ResultSetHelper.typeIsNumeric(0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(92, 92, 3455, (-1936), 518).when(resultSetMetaData0).getColumnCount();
      doReturn("", "%]", "", "Qq.<0!L'OQxHAVH6", "Qq.<0!L'OQxHAVH6").when(resultSetMetaData0).getColumnLabel(anyInt());
      doReturn(3455, 91, (-1936), (-303), 92).when(resultSetMetaData0).getColumnType(anyInt());
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      doReturn(true, true, true, true, true).when(resultSet0).first();
      doReturn(resultSetMetaData0, resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(resultSet0).getObject(anyInt());
      doReturn(518, 518).when(resultSet0).getRow();
      doReturn(104114, 3455).when(resultSet0).getType();
      doReturn(false, false).when(resultSet0).last();
      doReturn(true, true, true, true, false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0, 0);
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = false;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      resultSetHelper0.getResultSet();
      resultSetHelper0.getColumnNames();
      resultSetHelper0.getColumnNames();
      ResultSetHelper.typeIsNumeric(0);
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getCells();
      resultSetHelper0.getMaxRows();
      resultSetHelper0.getCells();
      resultSetHelper0.getCells();
      resultSetHelper0.initialize();
      resultSetHelper0.m_Initialized = false;
      resultSetHelper0.initialize();
      Class<Timestamp>[] classArray0 = (Class<Timestamp>[]) Array.newInstance(Class.class, 8);
      Class<Timestamp> class0 = Timestamp.class;
      classArray0[0] = class0;
      Class<Timestamp> class1 = Timestamp.class;
      classArray0[1] = class1;
      Class<Timestamp> class2 = Timestamp.class;
      classArray0[2] = class2;
      Class<Timestamp> class3 = Timestamp.class;
      classArray0[3] = class3;
      Class<Timestamp> class4 = Timestamp.class;
      classArray0[4] = class4;
      Class<Timestamp> class5 = Timestamp.class;
      classArray0[5] = class5;
      Class<Timestamp> class6 = Timestamp.class;
      classArray0[6] = class6;
      Class<Timestamp> class7 = Timestamp.class;
      classArray0[7] = class7;
      resultSetHelper0.m_ColumnClasses = classArray0;
      resultSetHelper0.initialize();
      resultSetHelper0.hasMaxRows();
      ResultSetHelper.typeToClass(0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-3446)).when(resultSetMetaData0).getColumnCount();
      ResultSetMetaData resultSetMetaData1 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData1).getColumnCount();
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(resultSet1).toString();
      doReturn(true, true).when(resultSet1).first();
      doReturn(resultSetMetaData0, resultSetMetaData1).when(resultSet1).getMetaData();
      doReturn(801).when(resultSet1).getRow();
      doReturn((-3446)).when(resultSet1).getType();
      doReturn(true).when(resultSet1).last();
      doReturn(true, true, true, true, true).when(resultSet1).next();
      resultSetHelper0.m_ColumnCount = 1275;
      resultSetHelper0.m_ResultSet = resultSet1;
      resultSetHelper0.getResultSet();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.hasMaxRows();
      resultSetHelper0.m_Initialized = false;
      resultSetHelper0.m_ColumnNames = null;
      int int0 = resultSetHelper0.getColumnCount();
      assertEquals(1275, int0);
      
      resultSetHelper0.getResultSet();
      resultSetHelper0.m_ColumnNames = null;
      Object[][] objectArray0 = resultSetHelper0.getCells();
      assertEquals(801, objectArray0.length);
      
      resultSetHelper0.getColumnCount();
      resultSetHelper0.m_ColumnCount = 1;
      resultSetHelper0.hasMaxRows();
      boolean boolean0 = resultSetHelper0.hasMaxRows();
      assertEquals(0, resultSetHelper0.getMaxRows());
      assertFalse(boolean0);
      
      ResultSetHelper.typeToClass(93);
      ResultSetHelper.typeToClass((-3));
      Class class0 = ResultSetHelper.typeToClass(4);
      assertEquals("class java.lang.Integer", class0.toString());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Class class0 = ResultSetHelper.typeToClass(1111);
      assertNotNull(class0);
      
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0, 0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).toString();
      doReturn(true, false, false).when(resultSet0).first();
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(0).when(resultSet0).getRow();
      doReturn(0).when(resultSet0).getType();
      doReturn(false).when(resultSet0).last();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      resultSetHelper0.m_Initialized = false;
      stringArray0[4] = "1K3?d\"-p%";
      resultSetHelper0.getColumnCount();
      stringArray0[5] = "C}<qraBL";
      resultSetHelper0.m_RowCount = 1111;
      stringArray0[6] = "";
      stringArray0[7] = "";
      resultSetHelper0.m_ColumnNames = stringArray0;
      boolean boolean0 = resultSetHelper0.hasMaxRows();
      assertFalse(boolean0);
      
      int int0 = resultSetHelper0.getRowCount();
      assertEquals(1111, int0);
      
      int int1 = resultSetHelper0.getColumnCount();
      assertEquals(0, int1);
      
      Object[][] objectArray0 = resultSetHelper0.getCells();
      assertEquals(0, objectArray0.length);
      
      ResultSet resultSet1 = resultSetHelper0.getResultSet();
      assertNotNull(resultSet1);
      assertEquals(0, resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-2299)).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(resultSet0).toString();
      doReturn(true, true, false).when(resultSet0).first();
      doReturn(resultSetMetaData0, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet0).getMetaData();
      doReturn(true, false, false).when(resultSet0).next();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      Object[][] objectArray0 = resultSetHelper0.getCells();
      assertEquals(2, objectArray0.length);
      
      resultSetHelper0.m_MaxRows = 0;
      resultSetHelper0.m_Initialized = true;
      resultSetHelper0.m_ColumnCount = 0;
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.m_ColumnClasses = null;
      resultSetHelper0.getResultSet();
      resultSetHelper0.getMaxRows();
      Class class0 = ResultSetHelper.typeToClass((-1));
      assertEquals("class java.lang.String", class0.toString());
      
      int int0 = resultSetHelper0.getColumnCount();
      assertEquals(0, int0);
      
      boolean boolean0 = ResultSetHelper.typeIsNumeric(0);
      assertFalse(boolean0);
      
      resultSetHelper0.getCells();
      Object[][] objectArray1 = resultSetHelper0.getCells();
      assertEquals(0, objectArray1.length);
      
      resultSetHelper0.getResultSet();
      assertEquals(0, resultSetHelper0.getMaxRows());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      ResultSetHelper resultSetHelper0 = new ResultSetHelper(resultSet0);
      boolean[] booleanArray0 = new boolean[2];
      resultSetHelper0.getColumnNames();
      booleanArray0[0] = true;
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(resultSet1).first();
      doReturn((ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null, (ResultSetMetaData) null).when(resultSet1).getMetaData();
      resultSetHelper0.m_ResultSet = resultSet1;
      resultSetHelper0.getColumnClasses();
      resultSetHelper0.m_ColumnCount = 0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      resultSetHelper0.m_ColumnNames = stringArray0;
      booleanArray0[1] = true;
      resultSetHelper0.m_NumericColumns = booleanArray0;
      boolean boolean0 = resultSetHelper0.hasMaxRows();
      assertFalse(boolean0);
      
      Class class0 = ResultSetHelper.typeToClass(1);
      assertEquals("class java.lang.Character", class0.toString());
      
      Object[][] objectArray0 = resultSetHelper0.getCells();
      assertEquals(0, objectArray0.length);
      assertEquals(0, resultSetHelper0.getMaxRows());
  }
}
