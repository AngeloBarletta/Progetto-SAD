/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 04 11:13:14 GMT 2023
 */

package CalcolatriceSourceCode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import CalcolatriceSourceCode.Calcolatrice;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Calcolatrice_ESTest extends Calcolatrice_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      // Undeclared exception!
      try { 
        calcolatrice0.factorial((-1977));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Factorial is not defined for negative numbers
         //
         verifyException("CalcolatriceSourceCode.Calcolatrice", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      // Undeclared exception!
      try { 
        calcolatrice0.divide(289, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Division by zero is not allowed
         //
         verifyException("CalcolatriceSourceCode.Calcolatrice", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      int int0 = calcolatrice0.subtract(1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      int int0 = calcolatrice0.subtract(2119, 0);
      assertEquals(2119, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      int int0 = calcolatrice0.subtract((-1426), 0);
      assertEquals((-1426), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      int int0 = calcolatrice0.multiply(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      int int0 = calcolatrice0.multiply(17, 17);
      assertEquals(289, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      int int0 = calcolatrice0.multiply((-1), 1016);
      assertEquals((-1016), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      int int0 = calcolatrice0.factorial(616);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      int int0 = calcolatrice0.factorial(0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      int int0 = calcolatrice0.factorial(17);
      assertEquals((-288522240), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      double double0 = calcolatrice0.divide(0.0, 17);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      double double0 = calcolatrice0.divide(17, 1.0);
      assertEquals(17.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      double double0 = calcolatrice0.divide((-288522240), 17);
      assertEquals((-1.6971896470588237E7), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      int int0 = calcolatrice0.add(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      int int0 = calcolatrice0.add(0, 1260);
      assertEquals(1260, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Calcolatrice calcolatrice0 = new Calcolatrice();
      int int0 = calcolatrice0.add((-6118), (-6118));
      assertEquals((-12236), int0);
  }
}
