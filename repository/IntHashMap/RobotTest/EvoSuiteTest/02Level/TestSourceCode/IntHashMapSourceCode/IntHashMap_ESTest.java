/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 12:07:09 GMT 2023
 */

package IntHashMapSourceCode;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import IntHashMapSourceCode.IntHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IntHashMap_ESTest extends IntHashMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap(579, 579);
      intHashMap0.clear();
      assertEquals(0, intHashMap0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap(579, 579);
      intHashMap0.put(0, (Object) null);
      intHashMap0.remove(579);
      assertFalse(intHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap(0);
      intHashMap0.put(0, "g");
      intHashMap0.remove(0);
      assertEquals(0, intHashMap0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap();
      Object object0 = intHashMap0.remove((-373));
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap(3);
      intHashMap0.put(3, (Object) null);
      intHashMap0.put(0, (Object) null);
      intHashMap0.remove(3);
      assertFalse(intHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap(0);
      intHashMap0.put(0, "g");
      intHashMap0.put(0, "g");
      assertFalse(intHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap(3);
      intHashMap0.put(0, (Object) null);
      intHashMap0.get(3);
      assertFalse(intHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap(0);
      intHashMap0.put(0, "g");
      intHashMap0.get(0);
      assertFalse(intHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap(3);
      intHashMap0.put(0, (Object) null);
      boolean boolean0 = intHashMap0.containsKey(3);
      assertFalse(intHashMap0.isEmpty());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap();
      intHashMap0.put(1903, intHashMap0);
      boolean boolean0 = intHashMap0.containsKey(1903);
      assertFalse(intHashMap0.isEmpty());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap();
      Object object0 = new Object();
      Object object1 = new Object();
      intHashMap0.put((-5351), object1);
      boolean boolean0 = intHashMap0.contains(object0);
      assertFalse(intHashMap0.isEmpty());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap(0);
      intHashMap0.put(0, "g");
      boolean boolean0 = intHashMap0.contains("g");
      assertEquals(1, intHashMap0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap(579, 579);
      // Undeclared exception!
      try { 
        intHashMap0.containsValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("IntHashMapSourceCode.IntHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap(0);
      boolean boolean0 = intHashMap0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IntHashMap intHashMap0 = null;
      try {
        intHashMap0 = new IntHashMap(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Load: 0.0
         //
         verifyException("IntHashMapSourceCode.IntHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IntHashMap intHashMap0 = null;
      try {
        intHashMap0 = new IntHashMap((-2977));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2977
         //
         verifyException("IntHashMapSourceCode.IntHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap();
      Object object0 = new Object();
      intHashMap0.put((-5351), object0);
      intHashMap0.rehash();
      assertFalse(intHashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap();
      int int0 = intHashMap0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IntHashMap intHashMap0 = new IntHashMap(0);
      intHashMap0.put(0, "g");
      boolean boolean0 = intHashMap0.isEmpty();
      assertEquals(1, intHashMap0.size());
      assertFalse(boolean0);
  }
}
