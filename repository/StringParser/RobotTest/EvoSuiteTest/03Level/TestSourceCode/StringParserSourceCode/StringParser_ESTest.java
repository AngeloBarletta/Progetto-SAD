/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 12 01:14:17 GMT 2023
 */

package StringParserSourceCode;

import org.junit.Test;
import static org.junit.Assert.*;
import StringParserSourceCode.StringParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StringParser_ESTest extends StringParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = StringParser.escapeString("\u00AF<wQ T`3'=D#nFu<\u00AF", '\'');
      assertEquals("'\\u00af<wQ T`3\\'=D#nFu<\\u00af'", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = StringParser.escapeString("\u001E\\b\u001E", '\u001E');
      assertEquals("\u001E\\u001e\\\\b\\u001e\u001E", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = StringParser.escapeString("DGQ\"lT(nrHSO.fgJ]^", 'Y');
      assertEquals("YDGQ\\\"lT(nrHSO.fgJ]^Y", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = StringParser.escapeString("\r\r", '\r');
      assertEquals("\r\\r\\r\r", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = StringParser.escapeString("\fhjp3\\tL?jL5$F=-S<\f", '\f');
      assertEquals("\f\\fhjp3\\\\tL?jL5$F=-S<\\f\f", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = StringParser.escapeString("\n6\\\n", '\n');
      assertEquals("\n\\n6\\\\\\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = StringParser.escapeString("hjp3\tL?jL5$F=-S<", '\f');
      assertEquals("\fhjp3\\tL?jL5$F=-S<\f", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = StringParser.escapeString("\b", '\u001E');
      assertEquals("\u001E\\b\u001E", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = StringParser.escapeString("\u0000", 'B');
      assertEquals("BB", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = StringParser.escapeString((String) null, 'I');
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "\\ut@Mp;";
      String string1 = StringParser.buildString(string0, false);
      assertEquals("\\ut@Mp;", string1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "o\\u .@Mp";
      String string1 = StringParser.buildString(string0, false);
      assertEquals("o\\u .@Mp", string1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = StringParser.buildString("'\u00AF<wQ T`3\\'=D#nFu<\u00AF'", true);
      assertEquals("\u00AF<wQ T`3'=D#nFu<\u00AF", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = StringParser.buildString("6\u0085465_)a7\u00856", true);
      assertEquals("\u008546", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "\\uE@Mp;";
      String string1 = StringParser.buildString(string0, true);
      assertEquals("\\uE@Mp", string1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "\\u.@M;";
      String string1 = StringParser.buildString(string0, true);
      assertEquals("\\u.@M", string1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = StringParser.buildString("Q\\'Q", false);
      assertEquals("Q'Q", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringParser stringParser0 = new StringParser();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("d(f?dXvt\\xwiwgezXd");
      int int0 = StringParser.readString(stringBuilder0, stringBuilder0, 9, 'd');
      assertEquals("d(f?dXvt\\xwiwgezXdxwiwgezXd", stringBuilder0.toString());
      assertEquals(17, int0);
  }
}
